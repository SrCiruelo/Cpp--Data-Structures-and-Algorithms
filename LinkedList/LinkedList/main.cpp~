#include "LinkedList.hpp"
#include <iostream>

template <typename T>
void print_LinkedList(LinkedList<T> lst){
  for(int i=0;i<lst.Count();++i){
    std::cout<<lst.get(i)<<"  ";
  }
  std::cout<<std::endl;
  return;
}

template <typename T>
LinkedList<T> get_list(){
  LinkedList<T> lst = {1,2,3,4,5,6,7,8,9,10};
  return lst;
}
int main(int argv,char** argc){
  LinkedList<int> lst = {1,2,3,4,5,6,7,8,9,10};
  print_LinkedList<int>(lst);
  LinkedList<int> lst0 = lst;
  print_LinkedList<int>(lst0);
  LinkedList<int> lst2(get_list<int>());
  print_LinkedList<int>(lst2);
  LinkedList<int>::iterator it = lst2.begin();
  while(it!=lst2.end()){
    std::cout<<(*it)<<std::endl;
    ++it;
  }
  lst2.del(--it);
  print_LinkedList<int>(lst2);
  lst2 = lst0;
  print_LinkedList<int>(lst2);
  lst2.del(lst2.begin());
  print_LinkedList<int>(lst2);
  lst0 = lst2;
  print_LinkedList<int>(lst0);
  return 0;
}
